{
  "properties_snapshot": {
    "owner": "demo",
    "run_strategy": {
      "rule": "parallel",
      "workflow_concurrency": 20
    },
    "step_concurrency": 20,
    "alerting": {
      "tct": {
        "completed_by_hour": 1,
        "tz": "UTC"
      }
    }
  },
  "is_active": true,
  "activate_time": 1598399975650,
  "activated_by": "demo",
  "is_default": true,
  "modify_time": 1598399975650,
  "metadata": {
    "workflow_id": "sample-active-wf-with-output-signals",
    "create_time": 1598399975650,
    "version_author": "demo",
    "source": "s3://netflix-code/dev/test/20200825235935__uuid/source.jar",
    "manifest": "s3://netflix-code/dev/test/20200825235935__uuid/manifest.json",
    "source_definition": "s3://netflix-code/dev/test/20200825235935__uuid/def.yaml",
    "git_info": {
      "branch": "foo",
      "origin": "origin",
      "path": "test_path",
      "author": "test_author",
      "sha": "121EF7B36826EDEDEB662F53A12DB5951E1AE1D7",
      "timestamp": 1627332490,
      "uncommitted_changes": false
    },
    "api_version": "3.00",
    "dsl_client_hostname": "user-demo",
    "dsl_client_version": "3.0.0",
    "dsl_lang": "java",
    "dsl_source": "nflx-scheduler-client"
  },
  "workflow": {
    "id": "sample-active-wf-with-output-signals",
    "name": "Test workflow 01",
    "description": "Long description about this workflow",
    "tags": [
      {
        "name": "demo",
        "namespace": "system"
      },
      "test",
      {
        "name": "foo"
      }
    ],
    "timeout": 3600,
    "time_triggers": [],
    "signal_triggers": [],
    "params": {
      "foo": {
        "value": "bar",
        "type": "STRING",
        "mode": "mutable"
      },
      "auu": {
        "value": 123,
        "type": "LONG",
        "tags": [
          "runtime"
        ]
      },
      "aaa": {
        "value": "bar",
        "type": "STRING",
        "validator": "@NotNull",
        "mode": "mutable"
      },
      "bbb": {
        "expression": "1 + 1;",
        "type": "LONG",
        "validator": "@Positive",
        "mode": "mutable"
      }
    },
    "steps": [
      {
        "step": {
          "id": "job.1",
          "name": "job 1's name",
          "description": "step description about this step",
          "transition": {
            "successors": {
              "job.2": "true",
              "job.3": "true"
            }
          },
          "type": "NoOp",
          "tags": [
            {
              "name": "NoOp",
              "namespace": "system"
            },
            "job.1"
          ],
          "timeout": 300,
          "params": {
            "foo": {
              "value": 10.2,
              "type": "double",
              "mode": "mutable"
            },
            "fuu": {
              "expression": "1 > 0;",
              "type": "BOOLEAN"
            },
            "bar": {
              "value": [
                1.1,
                2.2,
                3.3
              ],
              "type": "double_array"
            }
          },
          "retry_policy": {
            "error_retry_limit": 2,
            "platform_retry_limit": 3,
            "backoff": {
              "error_retry_backoff_in_secs": 1,
              "platform_retry_backoff_in_secs": 1,
              "type": "FIXED_BACKOFF"
            }
          },
          "signal_outputs": [
            {
              "name":  "dummy/test/signal1",
              "params": {
                "p1": {
                  "value": 1,
                  "type": "LONG"
                },
                "p2": {
                  "expression": "1+1",
                  "type": "LONG"
                }
              }
            },
            {
              "name": "aaa",
              "params": {
                "p1": {
                  "expression": "foo + 1;",
                  "type": "LONG"
                },
                "p2": {
                  "expression": "auu+1",
                  "type": "LONG"
                }
              }
            }
          ]
        }
      },
      {
        "subworkflow": {
          "id": "job.2",
          "sync": true,
          "params": {
            "subworkflow_id": {
              "value": "demo-sample-test-2",
              "type": "STRING"
            },
            "param1": {
              "value": {
                "foo": "bar"
              },
              "type": "STRING_MAP",
              "validator": "@NotEmpty",
              "mode": "mutable"
            }
          }
        }
      },
      {
        "foreach": {
          "id": "job.3",
          "params": {
            "param1": {
              "value": [
                "a",
                "b"
              ],
              "type": "String_array"
            },
            "loop_params": {
              "value": {
                "i": {
                  "value": [
                    1,
                    2,
                    3
                  ],
                  "type": "long_array",
                  "validator": "param!=null && param.size() > 2",
                  "mode": "mutable"
                },
                "j": {
                  "expression": "param1",
                  "type": "STRING_ARRAY",
                  "validator": "param!=null && param.size() > 2"
                }
              },
              "type": "MAP"
            }
          },
          "steps": [
            {
              "step": {
                "id": "job.4",
                "type": "NoOp",
                "tags": [
                  "NoOp"
                ],
                "params": {
                  "param2": {
                    "expression": "params['job' + '.' +'2__param1']",
                    "type": "STRING_MAP",
                    "mode": "mutable"
                  }
                },
                "transition": {
                  "successors": {
                    "job.5": "true"
                  }
                },
                "retry_policy": {},
                "signal_outputs": [
                  {
                    "name":  "dummy/test/signal1",
                    "params": {
                      "p1": {
                        "value": 1,
                        "type": "LONG"
                      },
                      "p2": {
                        "expression": "1+1",
                        "type": "LONG"
                      }
                    }
                  },
                  {
                    "name": "aaa",
                    "params": {
                      "p1": {
                        "expression": "foo + 1;",
                        "type": "LONG"
                      },
                      "p2": {
                        "expression": "auu+1",
                        "type": "LONG"
                      }
                    }
                  }
                ]
              }
            },
            {
              "step": {
                "id": "job.5",
                "type": "NoOp"
              }
            }
          ]
        }
      }
    ]
  }
}